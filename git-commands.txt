git config --global user.name "iameprel"
git config --global user.email "iameprel@am.com"


create repo
 note a repo has three stages : modified | staged | commited

on project folder type

git init

check status
git status

stage a file
git add index.html

stage all modified files
git add .
or
git add -A

remove a currently staged file
git rm --cached index.html or {filename.ext}

remove all files tha are staged
git rm --cached -r .

commit changes
git commit -m "changed body font size"

note: -m stands for message and message must be inside double qoutes

show all commits
git log

show all commits in short simple form
git log --oneline

will return
Î» git log --oneline
b5ed4a0 (HEAD -> master) added h1
67d7a40 added js file
0d5501d added log --oneline command reference to commands text file
de7b64d added commit command reference to git-commands text file
17c8a77 changed body font size
ebd52f2 added index title
69f4771 added index and styles. my first commit

go back to a particular commit via git checkout
git checkout ebd52f2

note: ebd52f2 is the commit id returned from git log --oneline

you can go back to the most latest branch commit using:
git check out master

if you want to undo or remove all changes made from a particular commit,
you can use
git revert {commitid}

e.g. git revert b5ed4a0
which was "added h1"
this will create a new commit and make it as the HEAD of the branch
and it will not include or will undo all the changes made
from "added h1" or b5ed4a0 commit

you still have access to b5ed4a0 commit but git revert command will
not include changes made to that branch on the created commit with git revert

meaning, git revert and git reset is never recommended
it will only confuse you in the process